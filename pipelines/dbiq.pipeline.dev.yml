# Flutter build
name: $(Date:yyyyMMdd)$(Rev:r)
variables:
  - group: 'MyAppSecrets'
  - name : 'projectDirectory'
    value: '$(Build.Repository.LocalPath)'
trigger:
  - dev*
pr:
  - develop
jobs:
  - job: BuildIOS
    displayName: IOS
    pool:
      vmImage: 'macOS-latest'
    steps:
      - task: InstallAppleCertificate@2
        displayName: Install Apple distribution certificate
        inputs:
          certSecureFile: 'my_cert.p12'
          certPwd: '$(iosP12password)'
          keychain: 'temp'
      - task: InstallAppleProvisioningProfile@1
        displayName: Install ad-hoc distribution profile
        inputs:
          provisioningProfileLocation: 'secureFiles'
          provProfileSecureFile: 'BlueSky_InHouse_Certificate.mobileprovision'
      # - task: DownloadSecureFile@1
      #   displayName: Get GoogleService-Info.plist
      #   name: googleServicesInfoPlist
      #   inputs:
      #     secureFile: 'GoogleService-Info.plist'
      # - pwsh: Move-Item $(googleServicesInfoPlist.secureFilePath) ios/Runner/ -Force
      #   displayName: Override GoogleService-Info.plist
      - task: FlutterInstall@0
        displayName: Install Flutter
        inputs:
          channel: 'stable'
          version: 'latest'
      - task: FlutterBuild@0
        displayName: Build app
        inputs:
          target: 'ios'
          projectDirectory: '.'
          buildName: '$(Build.BuildNumber)'
          iosCodesign: false
      - script: pipelines/scripts.sh start_iOS_simulator 'iPhone 8'
        displayName: 'Start iOS simulator'
#      - task: FlutterCommand@0
#        displayName: 'Run Widget tests'
#        inputs:
#          arguments: 'test'
      - task: FlutterCommand@0
        displayName: 'device'
        env:
          tags: $(tags)
        inputs:
          arguments: 'devices && echo($tags)'
          continueOnError: true
      - task: FlutterCommand@0
        displayName: 'Run Integration tests'
        env:
          tags: $(tags)
        inputs:
          arguments: 'drive --target=test_driver/app.dart'
        continueOnError: true
      - script: pipelines/scripts.sh generate_test_report
        displayName: 'Generate report'
      - publish: $(System.DefaultWorkingDirectory)/test_driver/reports
        displayName: 'Saving reports'
        artifact: reports_ios